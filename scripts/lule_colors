# cat $TMP/lule_colors > $HOME/.cache/wal/colors
cp /run/user/1000/lule_colors $HOME/.cache/wal/colors
cp /run/user/1000/lule_theme $HOME/.cache/wal/theme
cp /run/user/1000/lule_wallpaper $HOME/.cache/wal/wallpaper

create_files(){
    ### === PRINTING THINGS TO FILES === ###
    wallpaper="none"
    theme="none"
    fore=$(sed -n '16p' $HOME/.cache/wal/colors)
    back=$(sed -n '1p' $HOME/.cache/wal/colors)
    col1=$(sed -n '2p' $HOME/.cache/wal/colors)
    # COLORS.SH (used by shells - bash,zsh,fish...)
    printf "foreground=\"$fore\"\nbackground=\"$back\"\ncursor=\"$col1\"\n" > $HOME/.cache/wal/colors.sh
    awk '{print "color" NR-1 "=\"" $0 "\""}' $HOME/.cache/wal/colors >> $HOME/.cache/wal/colors.sh

    # COLORS.YAML (used by ALACRITY)
    printf "special:\n\tbackground: \"$back\"\n\tforeground: \"$fore\"\n\tcursor: \"$col1\"\n\ncolors:\n" > $HOME/.cache/wal/colors.yml
    awk '{print "\tcolor" NR-1 ": \"" $0 "\""}' $HOME/.cache/wal/colors >> $HOME/.cache/wal/colors.yml

    # COLORS.JSON (used by FREFOX)
    printf "{\n\t\"wallpaper\": \"$wallpaper\",\n\t\"theme\": \"$theme\",\n" > $HOME/.cache/wal/colors.json
    printf "\t\"special\": {\n\t\t\"background\": \"$back\",\n\t\t\"foreground\": \"$fore\",\n\t\t\"cursor\": \"$col1\"\n\t},\n\t\"colors\": {\n" >> $HOME/.cache/wal/colors.json
    awk '{print "\t\t\"color" NR-1 "\": \"" $0 "\","}' $HOME/.cache/wal/colors >> $HOME/.cache/wal/colors.json
    truncate -s-2 $HOME/.cache/wal/colors.json; printf "\n\t}\n}" >> $HOME/.cache/wal/colors.json

    # COLORS.INI (used by POLYBAR)
    printf "[colors]\n\tforeground=$fore\n\tbackground=$back\n\tcursor=$col1\n" > $HOME/.cache/wal/colors.ini
    awk '{print "\tcolor" NR-1 "=" $0 }' $HOME/.cache/wal/colors >> $HOME/.cache/wal/colors.ini

    # COLORS.CONF (used by KITTY)
    printf "foreground\t$fore\nbackground\t$back\ncursor\t$col1\n\n" > $HOME/.cache/wal/colors.conf
    awk '{print "color" NR-1 "\t " $0}' $HOME/.cache/wal/colors >> $HOME/.cache/wal/colors.conf

    # SEQUENCES (escape codes sent to all '/dev/pts/*')
    printf "]10;$fore\\]11;$back\\]12;$col1\\]13;$back\\]17;$col1\\]19;$back\\" > $HOME/.cache/wal/sequences
    awk '{print "]4;" NR-1 ";" $0"\\"}' ORS='' $HOME/.cache/wal/colors >> $HOME/.cache/wal/sequences
}

create_files


#sent color sequences to all ppts (most important piece of this script)
colors_to_tty(){
    for tt in /dev/pts/*; do
        re='^[0-9]+$'; [[ $(basename $tt) =~ $re ]] && cat $HOME/.cache/wal/sequences > $tt;
    done
}
colors_to_tty &


#apply all colors (or specific command) to nvim needs 'pip install neovim-remote' and 'lsof'
colors_to_nvim(){
    if command -v nvr &> /dev/null ; then
        for i in `pidof nvim`; do
            for e in `lsof -p "$i" | grep LISTEN | awk -v N=$9 '{print $9}'`; do
                nvr --nostart --servername $e -c ":lua mycolors(\"$(cat $HOME/.cache/wal/theme)\")" &
            done
        done
    else
        1>&2 printf "executable nvr is not fond in your \$PATH, install it with 'pip install neovim-remote'\n"
    fi
}
colors_to_nvim &

#colors awesomewm
awesome-client 'require("beautiful").init(require("awful").util.getdir("config") .. "theme.lua" )'


bspc config focused_border_color $(cat $HOME/.cache/wal/colors | head -n 2 | tail -n 1) &
python $HOME/.local/bin/pywalfox update &

feh --no-fehbg --bg-scale $(cat $TMP/lule_wallpaper) &
